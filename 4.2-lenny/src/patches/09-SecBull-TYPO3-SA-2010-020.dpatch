#!/bin/sh /usr/share/dpatch/dpatch-run
## 09-SecBull-TYPO3-SA-2010-020.dpatch by Christian Welzel <gawain@camlann.de>
##
## DP: Fixes SecBull-TYPO3-SA-2010-020 (taken from svn tag TYPO3_4-2-15
## DP: revisions 8950:8984)

@DPATCH@

Index: t3lib/class.t3lib_tsfebeuserauth.php
===================================================================
--- old/t3lib/class.t3lib_tsfebeuserauth.php	(.../branches/TYPO3_4-2)	(Revision 8950)
+++ new/t3lib/class.t3lib_tsfebeuserauth.php	(.../tags/TYPO3_4-2-15)	(Revision 8984)
@@ -185,7 +185,7 @@
 				if (is_array($v)) {
 					$query.= $this->extPrintFeAdminDialogHiddenFields($k,$v);
 				} else {
-					$query.= '<input type="hidden" name="'.$k.'" value="'.htmlspecialchars($v).'">'.chr(10);
+					$query .= '<input type="hidden" name="' . htmlspecialchars($k) . '" value="' . htmlspecialchars($v) . '">' . chr(10);
 				}
 			}
 		}
@@ -253,7 +253,7 @@
 			if (is_array($v))	{
 				$out.= $this->extPrintFeAdminDialogHiddenFields($key.'['.$k.']',$v);
 			} else {
-				$out.= '<input type="hidden" name="'.$key.'['.$k.']" value="'.htmlspecialchars($v).'">'.chr(10);
+				$out.= '<input type="hidden" name="' . htmlspecialchars($key) . '[' . htmlspecialchars($k) . ']" value="' . htmlspecialchars($v) . '">' . chr(10);
 			}
 		}
 		return $out;
Index: typo3/contrib/RemoveXSS/RemoveXSS.php
===================================================================
--- old/typo3/contrib/RemoveXSS/RemoveXSS.php	(.../branches/TYPO3_4-2)	(Revision 8950)
+++ new/typo3/contrib/RemoveXSS/RemoveXSS.php	(.../tags/TYPO3_4-2-15)	(Revision 8984)
@@ -58,10 +58,12 @@
 
 		// straight replacements, the user should never need these since they're normal characters
 		// this prevents like <IMG SRC=&#X40&#X61&#X76&#X61&#X73&#X63&#X72&#X69&#X70&#X74&#X3A&#X61&#X6C&#X65&#X72&#X74&#X28&#X27&#X58&#X53&#X53&#X27&#X29>
-		$search = '/&#[xX]0{0,8}(21|22|23|24|25|26|27|28|29|2a|2b|2d|2f|30|31|32|33|34|35|36|37|38|39|3a|3b|3d|3f|40|41|42|43|44|45|46|47|48|49|4a|4b|4c|4d|4e|4f|50|51|52|53|54|55|56|57|58|59|5a|5b|5c|5d|5e|5f|60|61|62|63|64|65|66|67|68|69|6a|6b|6c|6d|6e|6f|70|71|72|73|74|75|76|77|78|79|7a|7b|7c|7d|7e);?/ie';
-		$val = preg_replace($search, "chr(hexdec('\\1'))", $val);
-		$search = '/&#0{0,8}(33|34|35|36|37|38|39|40|41|42|43|45|47|48|49|50|51|52|53|54|55|56|57|58|59|61|63|64|65|66|67|68|69|70|71|72|73|74|75|76|77|78|79|80|81|82|83|84|85|86|87|88|89|90|91|92|93|94|95|96|97|98|99|100|101|102|103|104|105|106|107|108|109|110|111|112|113|114|115|116|117|118|119|120|121|122|123|124|125|126);?/ie';
-		$val = preg_replace($search, "chr('\\1')", $val);
+		$searchHexEncodings = '/&#[xX]0{0,8}(21|22|23|24|25|26|27|28|29|2a|2b|2d|2f|30|31|32|33|34|35|36|37|38|39|3a|3b|3d|3f|40|41|42|43|44|45|46|47|48|49|4a|4b|4c|4d|4e|4f|50|51|52|53|54|55|56|57|58|59|5a|5b|5c|5d|5e|5f|60|61|62|63|64|65|66|67|68|69|6a|6b|6c|6d|6e|6f|70|71|72|73|74|75|76|77|78|79|7a|7b|7c|7d|7e);?/ie';
+		$searchUnicodeEncodings = '/&#0{0,8}(33|34|35|36|37|38|39|40|41|42|43|45|47|48|49|50|51|52|53|54|55|56|57|58|59|61|63|64|65|66|67|68|69|70|71|72|73|74|75|76|77|78|79|80|81|82|83|84|85|86|87|88|89|90|91|92|93|94|95|96|97|98|99|100|101|102|103|104|105|106|107|108|109|110|111|112|113|114|115|116|117|118|119|120|121|122|123|124|125|126);?/ie';
+		while (preg_match($searchHexEncodings, $val) || preg_match($searchUnicodeEncodings, $val)) {
+			$val = preg_replace($searchHexEncodings, "chr(hexdec('\\1'))", $val);
+			$val = preg_replace($searchUnicodeEncodings, "chr('\\1')", $val);
+		}
 
 		// now the only remaining whitespace attacks are \t, \n, and \r
 		$ra1 = array('javascript', 'vbscript', 'expression', 'applet', 'meta', 'xml', 'blink', 'link', 'style', 'script', 'embed', 'object', 'iframe', 'frame', 'frameset', 'ilayer', 'layer', 'bgsound', 'title', 'base', 'onabort', 'onactivate', 'onafterprint', 'onafterupdate', 'onbeforeactivate', 'onbeforecopy', 'onbeforecut', 'onbeforedeactivate', 'onbeforeeditfocus', 'onbeforepaste', 'onbeforeprint', 'onbeforeunload', 'onbeforeupdate', 'onblur', 'onbounce', 'oncellchange', 'onchange', 'onclick', 'oncontextmenu', 'oncontrolselect', 'oncopy', 'oncut', 'ondataavailable', 'ondatasetchanged', 'ondatasetcomplete', 'ondblclick', 'ondeactivate', 'ondrag', 'ondragend', 'ondragenter', 'ondragleave', 'ondragover', 'ondragstart', 'ondrop', 'onerror', 'onerrorupdate', 'onfilterchange', 'onfinish', 'onfocus', 'onfocusin', 'onfocusout', 'onhelp', 'onkeydown', 'onkeypress', 'onkeyup', 'onlayoutcomplete', 'onload', 'onlosecapture', 'onmousedown', 'onmouseenter', 'onmouseleave', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'onmousewheel', 'onmove', 'onmoveend', 'onmovestart', 'onpaste', 'onpropertychange', 'onreadystatechange', 'onreset', 'onresize', 'onresizeend', 'onresizestart', 'onrowenter', 'onrowexit', 'onrowsdelete', 'onrowsinserted', 'onscroll', 'onselect', 'onselectionchange', 'onselectstart', 'onstart', 'onstop', 'onsubmit', 'onunload');
Index: typo3/mod/tools/em/class.em_index.php
===================================================================
--- old/typo3/mod/tools/em/class.em_index.php	(.../branches/TYPO3_4-2)	(Revision 8950)
+++ new/typo3/mod/tools/em/class.em_index.php	(.../tags/TYPO3_4-2-15)	(Revision 8984)
@@ -2065,7 +2065,7 @@
 
 				// Link for downloading extension has been clicked - deliver content stream:
 				$dlFile = $this->CMD['downloadFile'];
-				if (t3lib_div::isFirstPartOfStr($dlFile,PATH_site) && t3lib_div::isFirstPartOfStr($dlFile,$absPath) && @is_file($dlFile))	{
+				if (t3lib_div::isAllowedAbsPath($dlFile) && t3lib_div::isFirstPartOfStr($dlFile, PATH_site) && t3lib_div::isFirstPartOfStr($dlFile, $absPath) && @is_file($dlFile)) {
 					$mimeType = 'application/octet-stream';
 					Header('Content-Type: '.$mimeType);
 					Header('Content-Disposition: attachment; filename='.basename($dlFile));
Index: typo3/sysext/cms/tslib/class.tslib_fe.php
===================================================================
--- old/typo3/sysext/cms/tslib/class.tslib_fe.php	(.../branches/TYPO3_4-2)	(Revision 8950)
+++ new/typo3/sysext/cms/tslib/class.tslib_fe.php	(.../tags/TYPO3_4-2-15)	(Revision 8984)
@@ -2520,28 +2520,30 @@
 	function jumpUrl()	{
 		if ($this->jumpurl)	{
 			if (t3lib_div::_GP('juSecure'))	{
-				$locationData = t3lib_div::_GP('locationData');
-				$mimeType = t3lib_div::_GP('mimeType');
+				$locationData = (string)t3lib_div::_GP('locationData');
+				$mimeType = (string)t3lib_div::_GP('mimeType');  // Need a type cast here because mimeType is optional!
 
 				$hArr = array(
 					$this->jumpurl,
-					t3lib_div::_GP('locationData'),
-					t3lib_div::_GP('mimeType'),
-					$this->TYPO3_CONF_VARS['SYS']['encryptionKey']
+					$locationData,
+					$mimeType
 				);
-				$calcJuHash=t3lib_div::shortMD5(serialize($hArr));
-				$juHash = t3lib_div::_GP('juHash');
-				if ($juHash == $calcJuHash)	{
+				$calcJuHash = t3lib_div::hmac(serialize($hArr));
+				$juHash = (string)t3lib_div::_GP('juHash');
+				if ($juHash === $calcJuHash) {
 					if ($this->locDataCheck($locationData))	{
 						$this->jumpurl = rawurldecode($this->jumpurl);	// 211002 - goes with cObj->filelink() rawurlencode() of filenames so spaces can be allowed.
-						if (@is_file($this->jumpurl))	{
+						$absoluteFileName = t3lib_div::getFileAbsFileName(t3lib_div::resolveBackPath($this->jumpurl), FALSE);
+						if (t3lib_div::isAllowedAbsPath($absoluteFileName) && t3lib_div::verifyFilenameAgainstDenyPattern($absoluteFileName) && !t3lib_div::isFirstPartOfStr($absoluteFileName, PATH_site . 'typo3conf')) {
+							if (@is_file($absoluteFileName)) {
-							$mimeType = $mimeType ? $mimeType : 'application/octet-stream';
-							header('Cache-Control: must-revalidate, post-check=0, pre-check=0');
-							header('Content-Type: '.$mimeType);
-							header('Content-Disposition: attachment; filename='.basename($this->jumpurl));
-							readfile($this->jumpurl);
-							exit;
+								$mimeType = $mimeType ? $mimeType : 'application/octet-stream';
+								header('Cache-Control: must-revalidate, post-check=0, pre-check=0');
+								header('Content-Type: '.$mimeType);
+								header('Content-Disposition: attachment; filename="'.basename($absoluteFileName) . '"');
+								readfile($absoluteFileName);
+								exit;
-						} else die('jumpurl Secure: "'.$this->jumpurl.'" was not a valid file!');
+							} else die('jumpurl Secure: "'.$this->jumpurl.'" was not a valid file!');
+						} else die('jumpurl Secure: The requested file was not allowed to be accessed through jumpUrl (path or file not allowed)!');
 					} else die('jumpurl Secure: locationData, '.$locationData.', was not accessible.');
 				} else die('jumpurl Secure: Calculated juHash did not match the submitted juHash.');
 			} else {
Index: typo3/sysext/cms/tslib/class.tslib_content.php
===================================================================
--- old/typo3/sysext/cms/tslib/class.tslib_content.php	(.../branches/TYPO3_4-2)	(Revision 8950)
+++ new/typo3/sysext/cms/tslib/class.tslib_content.php	(.../tags/TYPO3_4-2-15)	(Revision 8984)
@@ -3981,6 +3981,7 @@
 	function locDataJU($jumpUrl,$conf)	{
 		$fI = pathinfo($jumpUrl);
 		$mimetype='';
+		$mimetypeValue = '';
 		if ($fI['extension'])	{
 			$mimeTypes = t3lib_div::trimExplode(',',$conf['mimeTypes'],1);
 			reset($mimeTypes);
@@ -3996,12 +3997,9 @@
 		$locationData = $GLOBALS['TSFE']->id.':'.$this->currentRecord;
 		$rec='&locationData='.rawurlencode($locationData);
 		$hArr = array(
-			$jumpUrl,
-			$locationData,
-			$mimetypeValue,
-			$GLOBALS['TSFE']->TYPO3_CONF_VARS['SYS']['encryptionKey']
+			$jumpUrl, $locationData, $mimetypeValue
 		);
-		$juHash='&juHash='.t3lib_div::shortMD5(serialize($hArr));
+		$juHash = '&juHash=' . t3lib_div::hmac(serialize($hArr));
 		return '&juSecure=1'.$mimetype.$rec.$juHash;
 	}
 
Index: typo3/sysext/setup/mod/index.php
===================================================================
--- old/typo3/sysext/setup/mod/index.php	(.../branches/TYPO3_4-2)	(Revision 8950)
+++ new/typo3/sysext/setup/mod/index.php	(.../tags/TYPO3_4-2-15)	(Revision 8984)
@@ -689,7 +689,7 @@
 		$this->simulateSelector = '';
 		unset($this->OLD_BE_USER);
 		if ($BE_USER->isAdmin())	{
-			$this->simUser = t3lib_div::_GP('simUser');
+			$this->simUser = intval(t3lib_div::_GP('simUser'));
 
 				// Make user-selector:
 			$users = t3lib_BEfunc::getUserNames('username,usergroup,usergroup_cached_list,uid,realName');
Index: typo3/sysext/sys_action/class.tx_sysaction.php
===================================================================
--- old/typo3/sysext/sys_action/class.tx_sysaction.php	(.../branches/TYPO3_4-2)	(Revision 8950)
+++ new/typo3/sysext/sys_action/class.tx_sysaction.php	(.../tags/TYPO3_4-2-15)	(Revision 8984)
@@ -310,7 +310,7 @@
 				$data["be_users"][$key]["disable"]=intval($arr[$key]["disable"]);
 				$data["be_users"][$key]["admin"]=0;
 				$data["be_users"][$key]["usergroup"] = $this->fixUserGroup($data["be_users"][$key]["usergroup"],$actionRow["t1_allowed_groups"],$arr[$key]["usergroups"]);
-				$data["be_users"][$key]["db_mountpoints"]=$arr[$key]["db_mountpoints"];
+				$data["be_users"][$key]["db_mountpoints"]=$this->fixDbMount($arr[$key]["db_mountpoints"]);
 				$data["be_users"][$key]["createdByAction"]=$actionRow["uid"];
 			}
 		} else {
@@ -339,7 +339,7 @@
 					$data["be_users"][$key]["disable"]=intval($arr[$key]["disable"]);
 					$data["be_users"][$key]["admin"]=0;
 					$data["be_users"][$key]["usergroup"] = $this->fixUserGroup($beRec["usergroup"],$actionRow["t1_allowed_groups"],$arr[$key]["usergroups"]);
-					$data["be_users"][$key]["db_mountpoints"]=$arr[$key]["db_mountpoints"];
+					$data["be_users"][$key]["db_mountpoints"]=$this->fixDbMount($arr[$key]["db_mountpoints"]);
 					$nId=$key;
 				}
 			}
@@ -385,6 +391,7 @@
 		if (is_array($inGroups))	{
 			reset($inGroups);
 			while(list(,$gu)=each($inGroups))	{
+				$gu = intval($gu);
 				$checkGr = t3lib_BEfunc::getRecord("be_groups",$gu);
 				if (is_array($checkGr) && in_array($gu,$grList))	{
 					$cGroups[]=$gu;
@@ -393,6 +400,53 @@
 		}
 		return implode(",",$cGroups);
 	}
+
+	/**
+	 * Clean the to be applied DB-Mounts from not allowed ones
+	 *
+	 * @param	string		$appliedDbMounts: List of pages like pages_123,pages_456
+	 * @return	string		Cleaned list
+	 */
+	protected function fixDbMount($appliedDbMounts) {
+		if (!empty($appliedDbMounts) && !$GLOBALS['BE_USER']->isAdmin()) {
+			$cleanDbMountList = array();
+			$dbMounts = t3lib_div::trimExplode(',', $appliedDbMounts, 1);
+
+				// walk through every wanted DB-Mount and check if it is allowed for the current user
+			foreach ($dbMounts as $dbMount) {
+				$uid = intval(substr($dbMount,  (strrpos($dbMount, '_') + 1)));
+				$page = t3lib_BEfunc::getRecord('pages', $uid);
+
+					// check rootline and access rights
+				if ($this->checkRootline($uid) && $GLOBALS['BE_USER']->calcPerms($page)) {
+					$cleanDbMountList[] = 'pages_' . $uid;
+				}
+
+			}
+			$appliedDbMounts = implode(',', $cleanDbMountList);
+		}
+		return $appliedDbMounts;
+	}
+
+	/**
+	 * Check if a page is inside the rootline the current user can see
+	 *
+	 * @param	int		$pageId: Id of the the page to be checked
+	 * @return	boolean	Access to the page
+	 */
+	protected function checkRootline($pageId) {
+		$access = FALSE;
+
+		$dbMounts =  array_flip(explode(',', trim($GLOBALS['BE_USER']->dataLists['webmount_list'], ',')));
+		$rootline = t3lib_BEfunc::BEgetRootLine($pageId);
+		foreach ($rootline as $page) {
+			if (isset($dbMounts[$page['uid']]) && !$access) {
+				$access = TRUE;
+			}
+		}
+		return $access;
+	}
+
 	function action_createDir($uid)	{
 		$path = $this->action_getUserMainDir();
 		if ($path)	{
